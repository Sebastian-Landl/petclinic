plugins {
    id 'base'
    id 'com.github.node-gradle.node'
}

task npmBuild(type: NpmTask) {
    // No node in CI-Job build-java
    onlyIf {System.env['CI'] == null}
    mustRunAfter 'npmInstall'
    build.dependsOn it    
    // https://docs.npmjs.com/cli/v10/commands/npm-run-script
    npmCommand = ['run', 'build']
}

task npmTest(type: NpmTask) {
    // No node in CI-Job build-java
    onlyIf {System.env['CI'] == null}
    mustRunAfter 'npmBuild'
    check.dependsOn it    
    // https://docs.npmjs.com/cli/v10/commands/npm-run-script
    npmCommand = ['run', 'test']
}

task dockerRun {
    doLast {
        def IMAGE = rootProject.name + '/' + project.name;
        exec {
            executable 'docker'
            args 'build', '.', '-t', IMAGE
        }
        exec {
            executable 'docker'
            args 'run', '-d', '--rm', '-p', '5000:5000', IMAGE
        }
    }
}

task versionCheck() {
    build.dependsOn it
    assert new File("${projectDir}/package.json")
        .text
        .contains('"version": "' + VERSION + '"')
}
